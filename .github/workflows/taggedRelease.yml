#please edit  public static version: string = '
name: "tagged-release"
env:
  DOTNET_VERSION: '6.0.x'           # set this to the dot net version to use
  AZURE_WEBAPP_NAME: 'AutoBlocklyApp'
on:
  push:    
    tags:
      - "v*"
  
  workflow_dispatch:

jobs:
  buildAngular:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.13.0]

    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@master

    - name: Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: put version
      run: |
        echo "${{github.ref_name}}" 
        echo "${{github.ref_name}}" > version.txt


    - name: npm modify docs
      run: |
        npm i -g npm@8.3.0               
        cd src
        echo 'install angular'    
        npm i  @angular/cli@13
        echo "install ws"
        npm i -force
        cd AutoBlocklyApp
        npm i -force
        cd ..
        npm run buildGitHubPages
        cd ..
        rm -r docs/*
        cp -r src/AutoBlocklyApp/dist/AutoBlocklyApp/* docs/
        cp docs/index.html docs/404.html
        cd docs
        echo "${{github.ref_name}}" > version.txt
        cd ..
        ls -l docs/
        

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: AutoBlocklyApp
        path: 'src/AutoBlocklyApp/dist/AutoBlocklyApp/*'
        retention-days: 1

    - name : autocommit
      run: |
        git config --global user.email "taggedrelease@ignatandrei.com"
        git config --global user.name "Tagged release"
        git add docs/.
        git status --porcelain
        git commit -am "Auto commit from Github Action" --allow-empty
        git push origin HEAD:main

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        
    - name: Archive Release 
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'releaseBlocklyAutomation.zip'
        path: 'AutoBlocklyApp/'
        directory: '${{github.workspace}}/src/AutoBlocklyApp/dist/'
        exclusions: '*.git* /*node_modules/* .editorconfig'       


    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 

    - name: making releases of loaders
      run: |
        rm -r src/AutoBlocklyApp/dist/AutoBlocklyApp/*
        cd src
        npm run buildGitHubPages
        rm -r Loaders/SimpleSite/AutoBlocklySimple/wwwroot/BlocklyAutomation/*
        cp -r AutoBlocklyApp/dist/AutoBlocklyApp/* Loaders/SimpleSite/AutoBlocklySimple/wwwroot/BlocklyAutomation/
        rm -r Local/LocalAPI/LocalAPI/wwwroot/BlocklyAutomation/*
        cp -r AutoBlocklyApp/dist/AutoBlocklyApp/* Local/LocalAPI/LocalAPI/wwwroot/BlocklyAutomation/
        cp -r Local/LocalAPI/LocalAPI/wwwroot/customBlocklyAutomation/* Local/LocalAPI/LocalAPI/wwwroot/BlocklyAutomation/
        rm -r Local/LocalAPI/LocalAPI/wwwroot/customBlocklyAutomation/*
        cd Loaders
        cd SimpleSite
        cd AutoBlocklySimple
        
        dotnet publish -r win-x64 -c Release -o ${{env.AZURE_WEBAPP_NAME}}WinX64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true
        dotnet publish -r linux-x64 -c Release -o ${{env.AZURE_WEBAPP_NAME}}linX64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true 
        dotnet publish -r win-x64 -c Release -o ${{env.AZURE_WEBAPP_NAME}}IISWinX64 --self-contained true -p:PublishSingleFile=false -p:PublishTrimmed=false

    - name: making releases of localApi
      run: |
        cd src
        cd Local
        cd LocalAPI
        cd LocalAPI
        dotnet publish -r win-x64 -c Release --self-contained -o ${{env.AZURE_WEBAPP_NAME}}LocalAPI 

    - name: Archive LocalAPI
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'releaseLocalAPI.zip'
        path: '${{env.AZURE_WEBAPP_NAME}}LocalAPI/'
        directory: '${{github.workspace}}/src/Local/LocalAPI/LocalAPI/'
        exclusions: '*.git* /*node_modules/* .editorconfig'       

    - name: Archive Release Linux
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'releaseLin.zip'
        path: '${{env.AZURE_WEBAPP_NAME}}linX64/'
        directory: '${{github.workspace}}/src/Loaders/SimpleSite/AutoBlocklySimple/'
        exclusions: '*.git* /*node_modules/* .editorconfig'       

    - name: Archive Release Windows
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'releaseWin.zip'
        path: '${{env.AZURE_WEBAPP_NAME}}WinX64/'
        directory: '${{github.workspace}}/src/Loaders/SimpleSite/AutoBlocklySimple/'
        exclusions: '*.git* /*node_modules/* .editorconfig'       
    

    - name: Archive Release IIS
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'releaseIISWin.zip'
        directory: '${{github.workspace}}/src/Loaders/SimpleSite/AutoBlocklySimple/'
        path: '${{env.AZURE_WEBAPP_NAME}}IISWinX64/'
        exclusions: '*.git* /*node_modules/* .editorconfig'       

    - name: copy release 
      run: |
        find ${{github.workspace}} -type f -name "*.zip"
        cp ${{github.workspace}}/src/Loaders/SimpleSite/AutoBlocklySimple/releaseLin.zip ${{github.workspace}}/releaseLin.zip
        cp ${{github.workspace}}/src/Loaders/SimpleSite/AutoBlocklySimple/releaseWin.zip ${{github.workspace}}/releaseWin.zip
        cp ${{github.workspace}}/src/Loaders/SimpleSite/AutoBlocklySimple/releaseIISWin.zip ${{github.workspace}}/releaseIISWin.zip
        cp ${{github.workspace}}/src/AutoBlocklyApp/dist/releaseBlocklyAutomation.zip ${{github.workspace}}/releaseBlocklyAutomation.zip
        cp ${{github.workspace}}/src/Local/LocalAPI/LocalAPI/releaseLocalAPI.zip ${{github.workspace}}/releaseLocalAPI.zip
        echo 'copied'
        find ${{github.workspace}} -type f -name "*.zip"

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: AllReleases
        path: |
            releaseBlocklyAutomation.zip
            releaseLin.zip
            releaseWin.zip
            releaseIISWin.zip
            releaseLocalAPI.zip
            version.txt
        retention-days: 1


    # - name: Release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files:  |
    #         releaseBlocklyAutomation.zip
    #         releaseLin.zip
    #         releaseWin.zip
    #         releaseIISWin.zip
    #         releaseLocalAPI.zip
    #         version.txt
        # tag: v${{ env.GITHUB_SHA }}
        # tag_name: v${{ env.GITHUB_SHA }}
# 



    # - name: delete older-releases@v0
    #   uses: dev-drprasad/delete-older-releases@v0.2.0
    #   with:
    #     #repo: <owner>/<repoName> # defaults to current repo
    #     keep_latest: 2
    #     #delete_tag_pattern: beta # defaults to ""
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  buildDesktop:
    needs: buildAngular
    runs-on: windows-latest

    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@master
    
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: AllReleases
  
    - name: unzip ang archive
      shell: pwsh
      run: |
        dir
        dir AllReleases/*
        Expand-Archive -LiteralPath "AllReleases/releaseBlocklyAutomation.zip" -DestinationPath "releaseBlocklyAutomation"
  
    - name: build wpf
      shell: pwsh
      run: |        
        cd src\apps\tests\wpf\WebView2WpfBrowser
        dotnet publish -r win-x64 -c Release -o ${{env.AZURE_WEBAPP_NAME}}WPF64 --self-contained -o wpfApp
